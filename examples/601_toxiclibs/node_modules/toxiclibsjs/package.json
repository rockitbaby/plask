{
  "name": "toxiclibsjs",
  "version": "0.1.3",
  "description": "toxiclibsjs is an open-source library for computational design tasks with JavaScript.",
  "keywords": [
    "design",
    "geometry",
    "mesh",
    "math",
    "graphics"
  ],
  "main": "../index",
  "engines": {
    "node": ">=0.4"
  },
  "maintainers": [
    {
      "name": "Kyle Phillips",
      "email": "kyle@haptic-data.com"
    }
  ],
  "bugs": {
    "mail": "kyle@haptic-data.com",
    "url": "https://github.com/hapticdata/toxiclibsjs/issues"
  },
  "licenses": [
    {
      "type": "GNU",
      "url": "http://www.gnu.org/licenses/lgpl-2.1.html"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "http://github.com/hapticdata/toxiclibsjs"
    }
  ],
  "dependencies": {
    "requirejs": "=1.0.0"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "#[Toxiclibsjs](http://haptic-data.com/toxiclibsjs) \n##an open-source library for computational design tasks with JavaScript. \n\nToxiclibs.js is a port of [Karsten Schmidt's Toxiclibs](http://toxiclibs.org) for Java and [Processing](http://processing.org). Toxiclibs.js works great with any DOM element, such as Canvas and SVG. The library is also available for use with [Node.js](http://nodejs.org) for desktop applications and servers. Examples pair with such fine libraries as: [Processing.js](http://processingjs.org), [Three.js](http://github.com/mrdoob/three.js), or [Raphael.js](http://raphaeljs.com) for SVG.\n\n##What it isâ€¦\n-\t2D/3D geometry\n-\tMesh generation and subdivision\n-\tInterpolation / Mapping\n-\tWave Generators\n-\t2D physics simulation\n-\tColor theory sorting and conversion\n\n\n\n### A few examples\n[![Spherical Harmonics in three.js](http://haptic-data.com/toxiclibsjs/img/spherical_harmonics.jpg)](http://haptic-data.com/toxiclibsjs/examples/SphericalHarmonics_threejs.html)\n[![additive_waves](http://haptic-data.com/toxiclibsjs/img/additive_waves.jpg)](http://haptic-data.com/toxiclibsjs/examples/AdditiveWaves_pjs-webgl.html)\n[![polar_unravel](http://haptic-data.com/toxiclibsjs/img/polar_unravel.gif)](http://haptic-data.com/toxiclibsjs/examples/PolarUnravel_pjs.html)\n[![attraction2d](http://haptic-data.com/toxiclibsjs/img/physics2d_attraction2d.gif)](http://haptic-data.com/toxiclibsjs/examples/Attraction2D_pjs.html)\n\n\n#Getting Started with Toxiclibs.js\n\nToxiclibs.js can be used in the following ways:\n\n*\tAs a single javascript file loaded into a webpage, with the contents of the entire library within a global *toxi* object.\n*\tAs [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) modules that can be loaded independently or in packages, via [RequireJS](http://requirejs.org)\n*\tIn [Node.js](http://nodejs.org) applications, as AMD modules that require the 'requirejs' library for Node.js.\n\nTo use as a single javascript file, copy the file `build/toxiclibs.js`:\n\n\t<script type=\"text/javascript\" src=\"js/toxiclibs.js\"></script>\n\t<script type=\"text/javascript\">\n\t\tvar myVector = new toxi.geom.Vec2D(window.innerWidth,window.innerHeight).scaleSelf(0.5);\n\t\tvar myColor = toxi.color.TColor.newRGB(128/255,64/255,32/255);\n\t</script>\nTo use with [RequireJS](http://requirejs.org), copy the contents of `lib/`:\n\n\trequire(['toxi/geom/Vec2D', toxi/color/TColor], function(Vec2D, TColor){\n\t\tvar myVector = new Vec2D(window.innerWidth,window.innerHeight).scaleSelf(0.5);\n\t\tvar myColor = TColor.newRGB(128/255,64/255,32/255);\n\t});\nTo use with [Node.js](http://nodejs.org):\n\n\tnpm install toxiclibsjs\nthen:\n\n\tvar\ttoxi = require('toxiclibsjs'),\n\t\tmyVector = new toxi.geom.Ve2D(0.5,0.5),\n\t\tmyColor = toxi.color.TColor.newRGB(128/255,64/255,32/255);\n\nFor comprehensive documentation, read the original libraries [javadocs](http://toxiclibs.org/javadocs/). As the library is still growing, you can compare that documentation to this list of implemented classes.\n\n\n## Toxiclibs.js follows the original package structure\nThe following objects are returned when loading the entire library\n\n\n* **color** - the color utils package\n* **geom** - the geometry utils package\n* *internals* - functionality used within the library\n* **math** - the math utils package\n* **physics2d** - the Verlet Physics 2D package\n* **processing** - the processing package, eases use with [Processing.js](http://processingjs.org)\n* **THREE** - features to ease use with [Three.js](http://github.com/mrdoob/three.js)\n* **utils** - the utils package\n\n\n\n\n\n[Toxiclibs.js](http://haptic-data.com/toxiclibsjs) was initiated on 1/5/2011 by Kyle Phillips [http://haptic-data.com](http://haptic-data.com)\n\n\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\n[http://creativecommons.org/licenses/LGPL/2.1/](http://creativecommons.org/licenses/LGPL/2.1/)\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA",
  "readmeFilename": "README.md",
  "_id": "toxiclibsjs@0.1.3",
  "_from": "toxiclibsjs"
}
